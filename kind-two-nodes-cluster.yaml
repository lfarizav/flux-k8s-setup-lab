# two nodes (1 worker, 1 controlplane) cluster config
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
#networking:
#  disableDefaultCNI: true
#  podSubnet: "192.168.1.0/16"  # This should match your primary CNI's range
nodes:
- role: control-plane
  kubeadmConfigPatches:
      - |
        kind: KubeletConfiguration
        apiVersion: kubelet.config.k8s.io/v1beta1
        allowedUnsafeSysctls:
          - "net.ipv4.ip_forward"
      - |
        kind: InitConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "ingress-ready=true"
  extraPortMappings:
  - containerPort: 80
    hostPort: 80
    listenAddress: "0.0.0.0"
    protocol: tcp
  - containerPort: 443
    hostPort: 443      
    protocol: TCP
- role: worker
  extraMounts:
  - hostPath: /home/luis/k8s_open5gs
    containerPath: /k8s_open5gs
  - hostPath: /dev
    containerPath: /dev
  - hostPath: /tmp/harbor-data
    containerPath: /var/lib/harbor
  kubeadmConfigPatches:
      - |
        kind: KubeletConfiguration
        apiVersion: kubelet.config.k8s.io/v1beta1
        allowedUnsafeSysctls:
          - "net.ipv4.ip_forward"
  extraPortMappings:
      # next is gitea http reserved port
      # use if not adding an ingress nginx controller resource,
      # if the ingress is used, this next port can be commented.
  - containerPort: 30003
    hostPort: 30003
    protocol: TCP
  - containerPort: 30200
    hostPort: 30200
    protocol: TCP
